@page "/weather"
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Weather</PageTitle>
<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

<Check TValue="bool" @bind-Checked="@showWeather">Show Weather</Check>

@if (showWeather)
{
    if (forecasts is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>Date</TableHeaderCell>
                    <TableHeaderCell>Temp. (C)</TableHeaderCell>
                    <TableHeaderCell>Temp. (F)</TableHeaderCell>
                    <TableHeaderCell>Summary</TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                @foreach (WeatherForecast forecast in forecasts)
                {
                    <TableRow>
                        <TableRowHeader>@forecast.Date.ToShortDateString()</TableRowHeader>
                        <TableRowCell>@forecast.TemperatureC</TableRowCell>
                        <TableRowCell>@forecast.TemperatureF</TableRowCell>
                        <TableRowCell>@forecast.Summary</TableRowCell>
                    </TableRow>
                }
            </TableBody>
        </Table>
    }
}

@code {
    private WeatherForecast[]? forecasts;
    private bool showWeather = true;

    protected sealed override void OnInitialized()
    {
        DateOnly startDate = DateOnly.FromDateTime(DateTime.Now);
        string[] summaries = [ "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" ];
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private sealed class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
