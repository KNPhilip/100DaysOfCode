// <auto-generated />
using System;
using BlazorSyncfusion.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorSyncfusion.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230522201214_Department")]
    partial class Department
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorSyncfusion.Shared.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(8897),
                            DepartmentId = 3,
                            FirstName = "Kenneth",
                            IsEmployee = true,
                            LastName = "Hougaard Soerensen",
                            Mail = "keso@aspit.dk",
                            NickName = "KESO",
                            School = "AspIT Trekanten",
                            Title = "Lærer"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(8945),
                            DepartmentId = 3,
                            FirstName = "Mads",
                            IsEmployee = true,
                            LastName = "Mikkel Rasmussen",
                            Mail = "mara@aspit.dk",
                            NickName = "MARA",
                            School = "AspIT Trekanten",
                            Title = "Lærer"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(8948),
                            DepartmentId = 3,
                            FirstName = "Dea",
                            IsEmployee = true,
                            LastName = "Gram",
                            Mail = "degr@aspin.dk",
                            NickName = "DEGR",
                            School = "AspIN",
                            Title = "Lærer"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(9002),
                            DepartmentId = 3,
                            FirstName = "Jan",
                            IsEmployee = true,
                            LastName = "Lindgaard Pedersen",
                            Mail = "jape@aspin.dk",
                            NickName = "JAPE",
                            School = "AspIN",
                            Title = "Lærer"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(9007),
                            DepartmentId = 3,
                            FirstName = "Jesper",
                            IsEmployee = true,
                            LastName = "Lade Mathiesen",
                            Mail = "jema@aspit.dk",
                            NickName = "JEMA",
                            Phone = "+45 72 16 28 56",
                            School = "AspIT Trekanten",
                            Title = "Specialpædagogisk vejleder"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(9011),
                            DepartmentId = 3,
                            FirstName = "Henrik",
                            IsEmployee = true,
                            LastName = "Stephansen",
                            Mail = "hens@aspit.dk",
                            NickName = "HENS",
                            Phone = "+45 72 16 26 85",
                            School = "AspIT Trekanten",
                            Title = "Praktik- og jobvejleder"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1994, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(9014),
                            DepartmentId = 3,
                            FirstName = "Ole",
                            IsEmployee = true,
                            LastName = "Bay Jensen",
                            Mail = "oje@aspit.dk",
                            NickName = "OJE",
                            Phone = "+45 72 16 27 99",
                            School = "AspIT Trekanten",
                            Title = "Uddannelseschef"
                        });
                });

            modelBuilder.Entity("BlazorSyncfusion.Shared.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 55.710459999999998,
                            Longitude = 9.5223899999999997,
                            Name = "AspIT Nordjylland"
                        },
                        new
                        {
                            Id = 2,
                            Latitude = 56.150649999999999,
                            Longitude = 10.20538,
                            Name = "AspIT Østjylland"
                        },
                        new
                        {
                            Id = 3,
                            Latitude = 57.055010000000003,
                            Longitude = 9.9052000000000007,
                            Name = "AspIT Trekanten"
                        },
                        new
                        {
                            Id = 4,
                            Name = "AspIN"
                        });
                });

            modelBuilder.Entity("BlazorSyncfusion.Shared.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(9153),
                            EmployeeId = 5,
                            Text = "ADHD child and very annoying."
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 22, 22, 12, 14, 837, DateTimeKind.Local).AddTicks(9159),
                            EmployeeId = 1,
                            Text = "funny."
                        });
                });

            modelBuilder.Entity("BlazorSyncfusion.Shared.Employee", b =>
                {
                    b.HasOne("BlazorSyncfusion.Shared.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("BlazorSyncfusion.Shared.Entities.Note", b =>
                {
                    b.HasOne("BlazorSyncfusion.Shared.Employee", "Employee")
                        .WithMany("Notes")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BlazorSyncfusion.Shared.Employee", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("BlazorSyncfusion.Shared.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
