@page "/projects"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@attribute [Authorize(Roles = "Admin")]

@inject IProjectService ProjectService
@inject NavigationManager NavigationManager
@implements IDisposable

<PageTitle>TimeTracker | Projects</PageTitle>

<h3>Projects</h3>

<LibButton AddMarginTop Text="Create Project" OnClick="CreateProject" />

<QuickGrid Items="ProjectService.Projects.AsQueryable()">
    <PropertyColumn Property="t => t.Name" />
    <PropertyColumn Property="t => t.Description" />
    <PropertyColumn Property="t => t.StartDate" Format="dd/MM/yyyy" Title="Start" />
    <PropertyColumn Property="t => t.EndDate" Format="dd/MM/yyyy" Title="End" />
    <TemplateColumn>
        <button class="block rounded-md bg-teal-600 px-4 py-2.5 text-sm font-medium text-white transition hover:bg-teal-700"
                onclick="@(() => EditProject(context.Id))">
            <svg class="w-5 h-5 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                <path d="M12.687 14.408a3.01 3.01 0 0 1-1.533.821l-3.566.713a3 3 0 0 1-3.53-3.53l.713-3.566a3.01 3.01 0 0 1 .821-1.533L10.905 2H2.167A2.169 2.169 0 0 0 0 4.167v11.666A2.169 2.169 0 0 0 2.167 18h11.666A2.169 2.169 0 0 0 16 15.833V11.1l-3.313 3.308Zm5.53-9.065.546-.546a2.518 2.518 0 0 0 0-3.56 2.576 2.576 0 0 0-3.559 0l-.547.547 3.56 3.56Z" />
                <path d="M13.243 3.2 7.359 9.081a.5.5 0 0 0-.136.256L6.51 12.9a.5.5 0 0 0 .59.59l3.566-.713a.5.5 0 0 0 .255-.136L16.8 6.757 13.243 3.2Z" />
            </svg>
        </button>
    </TemplateColumn>
</QuickGrid>

@code {
    protected sealed override async Task OnInitializedAsync()
    {
        ProjectService.OnChange += StateHasChanged;
        await ProjectService.LoadAllProjectsAsync();
    }

    private void CreateProject()
    {
        NavigationManager.NavigateTo("/project");
    }

    private void EditProject(int id)
    {
        NavigationManager.NavigateTo("/project/" + id);
    }

    public void Dispose()
    {
        ProjectService.OnChange -= StateHasChanged;
    }
}
