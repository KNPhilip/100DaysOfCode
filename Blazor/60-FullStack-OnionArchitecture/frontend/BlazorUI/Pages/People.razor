@page "/people"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<PageTitle>People</PageTitle>

<h3>People</h3>

@if (PersonList is null)
{
    <span>Loading...</span>
}
else if (PersonList.Count == 0)
{
    <span>No people found...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Full Name</th>
                <th>Birth Date</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Person person in PersonList)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.FullName</td>
                    <td>@person.BirthDate.ToShortDateString()</td>
                    <td>
                        <a href="person-editor/@person.Id" class="btn btn-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                            </svg>
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeletePersonByIdAsync(person.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<br />

<a href="/person-editor" class="btn btn-primary mt-2">Add Person</a>

@code {
    private List<Person>? PersonList { get; set; } = null;

    protected sealed override async Task OnInitializedAsync()
    {
        await UpdatePersonListAsync();
    }

    private async Task DeletePersonByIdAsync(int id)
    {
        await HttpClient.DeleteAsync($"/api/person/{id}");
        await UpdatePersonListAsync();
    }

    private async Task UpdatePersonListAsync()
    {
        PersonList = await HttpClient.GetFromJsonAsync<List<Person>>("/api/person") ?? [];
    }
}
