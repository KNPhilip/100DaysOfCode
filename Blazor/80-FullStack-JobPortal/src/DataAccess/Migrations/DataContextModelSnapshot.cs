// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Microsoft Corporation is an American multinational technology company which produces computer software, consumer electronics, personal computers, and related services.",
                            EmployeeNumber = 225321,
                            Industry = "Technology",
                            IsSoftDeleted = false,
                            Location = "Redmond, WA",
                            Name = "Microsoft",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Amazon.com, Inc. is an American multinational technology company which focuses on e-commerce, cloud computing, digital streaming, and artificial intelligence.",
                            EmployeeNumber = 1660000,
                            Industry = "Technology",
                            IsSoftDeleted = false,
                            Location = "Seattle, WA",
                            Name = "Amazon",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The LEGO Group is a Danish toy production company based in Billund. It is best known for the manufacture of LEGO-brand toys, consisting mostly of interlocking plastic bricks.",
                            EmployeeNumber = 32301,
                            Industry = "Plastic Manufacturing",
                            IsSoftDeleted = false,
                            Location = "Billund",
                            Name = "The LEGO Group",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Facebook, Inc. is an American multinational technology conglomerate based in Menlo Park, California. It was founded by Mark Zuckerberg, along with his fellow roommates and students at Harvard College.",
                            EmployeeNumber = 60654,
                            Industry = "Technology",
                            IsSoftDeleted = false,
                            Location = "Menlo Park, CA",
                            Name = "Facebook",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Apple Inc. is an American multinational technology company that specializes in consumer electronics, computer software, and online services.",
                            EmployeeNumber = 147000,
                            Industry = "Technology",
                            IsSoftDeleted = false,
                            Location = "Cupertino, CA",
                            Name = "Apple",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.JobPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HiringManagerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HiringManagerId");

                    b.ToTable("JobPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 2,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a lead software architect to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 2,
                            IsSoftDeleted = false,
                            Skills = "[\"C\",\"C\\u002B\\u002B\",\"Architecture\",\"Design Patterns\",\"Rust\",\"C#\"]",
                            Title = "Lead Software Architect - Join us now!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 7,
                            IsSoftDeleted = false,
                            Skills = "[\"Python\",\"Powershell\",\"Bash\"]",
                            Title = "Junior Software Engineer - Join our team!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for an experienced observability engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 1,
                            IsSoftDeleted = false,
                            Skills = "[\"OpenTelemetry\",\"Elastic Stack\",\"APM\",\"Metrics\",\"System Insight\"]",
                            Title = "Looking for an Observability Engineer",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a senior software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 3,
                            IsSoftDeleted = false,
                            Skills = "[\"Java\",\"Spring Boot\",\"Kubernetes\",\"Docker\"]",
                            Title = "Software Engineer - Join our team!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a senior software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 3,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Senior Software Engineer - Join our team!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 5,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 2,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 4,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 6,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 7,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "We are looking for a software engineer to join our team. You will be working on the latest technologies and help us build the next generation of software products.",
                            HiringManagerId = 1,
                            IsSoftDeleted = false,
                            Skills = "[\"C#\",\".NET\",\"Azure\",\"SQL\"]",
                            Title = "Software Engineer - Open position!",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "philip.nielsen@lego.com",
                            FirstName = "Philip",
                            IsSoftDeleted = false,
                            JobTitle = "Associate Software Engineer",
                            LastName = "Krag Nielsen",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bill.gates@microsoft.com",
                            FirstName = "Bill",
                            IsSoftDeleted = false,
                            JobTitle = "Co-Founder",
                            LastName = "Gates",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jeff.dunham@facebook.com",
                            FirstName = "Jeff",
                            IsSoftDeleted = false,
                            JobTitle = "Senior Technology Manager",
                            LastName = "Dunham",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tim.omalley@facebook.com",
                            FirstName = "Tim",
                            IsSoftDeleted = false,
                            JobTitle = "Lead Engineer",
                            LastName = "O'Malley",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@apple.com",
                            FirstName = "John",
                            IsSoftDeleted = false,
                            JobTitle = "Software Manager",
                            LastName = "Doe",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.doe@apple.com",
                            FirstName = "Jane",
                            IsSoftDeleted = false,
                            JobTitle = "Software Engineer",
                            LastName = "Doe",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "trevor.philips@amazon.com",
                            FirstName = "Steven",
                            IsSoftDeleted = false,
                            JobTitle = "Chief Technology Officer",
                            LastName = "Ogg",
                            PasswordHash = "123456",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.JobPost", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Models.User", "HiringManager")
                        .WithMany("HiringPosts")
                        .HasForeignKey("HiringManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");

                    b.Navigation("HiringManager");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.HasOne("Domain.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("HiringPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
